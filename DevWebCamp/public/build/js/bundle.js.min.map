{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","hiddenHora","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","eventos","json","console","log","horasTomadas","map","evento","hora_id","listadoHoras","listadoHorasArray","Array","from","filter","li","dataset","horaId","forEach","classList","remove","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","buscarEventos","horaPrevia","add","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBAEAC,GADAR,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAKA,SAAAQ,EAAAC,GACAR,EAAAQ,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAEAC,OAAAC,OAAAb,GAAAc,SAAA,KAOAC,iBACA,MAAAb,IAAAA,EAAAD,aAAAA,GAAAD,EACAgB,EAAA,+BAAAd,kBAAAD,IAEAgB,QAAAC,MAAAF,GACAG,QAAAF,EAAAG,OACAC,QAAAC,IAAAH,GAKA,SAAAA,GACA,MAAAI,EAAAJ,EAAAK,IAAAC,GAAAA,EAAAC,SACAC,EAAA7B,SAAAO,iBAAA,aACAuB,EAAAC,MAAAC,KAAAH,GACAC,EAAAG,OAAAC,IAAAT,EAAAT,SAAAkB,EAAAC,QAAAC,SAEAC,QAAAH,GAAAA,EAAAI,UAAAC,OAAA,+BAEAvC,SAAAO,iBAAA,8CACA8B,QAAAG,GAAAA,EAAAC,iBAAA,QAAAC,IAZAC,CAAAtB,GAXAuB,GA0BA,SAAAF,EAAAhC,GACA,MAAAmC,EAAA7C,SAAAC,cAAA,8BAEA4C,GACAA,EAAAP,UAAAC,OAAA,6BAGA7B,EAAAC,OAAA2B,UAAAQ,IAAA,6BACAtC,EAAAK,MAAAH,EAAAC,OAAAwB,QAAAC,OA5CA/B,EAAAoC,iBAAA,SAAAhC,GACAH,EAAA+B,QAAAjC,GAAAA,EAAAqC,iBAAA,SAAAhC,KAfA,GCAA,WACA,MAAAsC,EAAA/C,SAAAC,cAAA,gBAEA,GAAA8C,EAAA,CACA,MAAAC,EAAAhD,SAAAC,cAAA,SACAgD,EAAAjD,SAAAC,cAAA,iBAEA,IAAAiD,EAAA,GAsBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAb,QAAAgB,IACA,MAAAC,EAAAtD,SAAAuD,cAAA,MACAD,EAAAhB,UAAAQ,IAAA,mBACAQ,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAGAK,IAGA,SAAAF,EAAA/C,GACAA,EAAAC,OAAA4B,SACAW,EAAAA,EAAAjB,OAAAoB,GAAAA,IAAA3C,EAAAC,OAAAyC,aACAO,IAGA,SAAAA,IACAV,EAAApC,MAAAqC,EAAAU,WAxCA,KAAAX,EAAApC,QACAqC,EAAAD,EAAApC,MAAAgD,MAAA,KACAV,KAGAJ,EAAAN,iBAAA,YAEA,SAAA/B,GACA,GAAA,KAAAA,EAAAoD,QAAA,CACA,GAAA,KAAApD,EAAAC,OAAAE,MAAAkD,QAAArD,EAAAC,OAAAE,MAAA,EACA,OAEAH,EAAAsD,iBACAd,EAAA,IAAAA,EAAAxC,EAAAC,OAAAE,MAAAkD,QACAhB,EAAAlC,MAAA,GAEAsC,SAzBA","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: '' \r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const hiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const hiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n        \r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n            \r\n            if (Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            \r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            console.log(eventos);\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId));\r\n            \r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            \r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n            hiddenHora.value = e.target.dataset.horaId;\r\n        }\r\n    }\r\n})();","(function() {\r\n    const tagsInput = document.querySelector('#tags__input');\r\n\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n\r\n        function guardarTag(e) {            \r\n            if (e.keyCode === 44) {\r\n                if (e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                \r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}